// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package api

import (
	"time"
)

// ConnectionInfo defines model for ConnectionInfo.
type ConnectionInfo struct {
	Address       string    `json:"address"`
	At            time.Time `json:"at"`
	Crypto        string    `json:"crypto"`
	InBytesTotal  int64     `json:"inBytesTotal"`
	IsLocal       bool      `json:"isLocal"`
	OutBytesTotal int64     `json:"outBytesTotal"`
	StartedAt     time.Time `json:"startedAt"`
	Type          string    `json:"type"`
}

// ConnectionStats defines model for ConnectionStats.
type ConnectionStats struct {
	Address       string           `json:"address"`
	At            time.Time        `json:"at"`
	ClientVersion string           `json:"clientVersion"`
	Connected     bool             `json:"connected"`
	Crypto        string           `json:"crypto"`
	InBytesTotal  int64            `json:"inBytesTotal"`
	IsLocal       bool             `json:"isLocal"`
	OutBytesTotal int64            `json:"outBytesTotal"`
	Paused        bool             `json:"paused"`
	Primary       ConnectionInfo   `json:"primary"`
	Secondary     []ConnectionInfo `json:"secondary"`
	StartedAt     time.Time        `json:"startedAt"`
	Type          string           `json:"type"`
}

// Connections defines model for Connections.
type Connections struct {
	Connections map[string]ConnectionStats `json:"connections"`
	Total       ConnectionsTotal           `json:"total"`
}

// ConnectionsTotal defines model for ConnectionsTotal.
type ConnectionsTotal struct {
	At            time.Time `json:"at"`
	InBytesTotal  int64     `json:"inBytesTotal"`
	OutBytesTotal int64     `json:"outBytesTotal"`
}

// DeviceConfiguration defines model for DeviceConfiguration.
type DeviceConfiguration struct {
	Addresses                []string         `json:"addresses"`
	AllowedNetworks          []string         `json:"allowedNetworks"`
	AutoAcceptFolders        bool             `json:"autoAcceptFolders"`
	CertName                 string           `json:"certName"`
	Compression              string           `json:"compression"`
	DeviceID                 string           `json:"deviceID"`
	IgnoredFolders           []ObservedFolder `json:"ignoredFolders"`
	IntroducedBy             string           `json:"introducedBy"`
	Introducer               bool             `json:"introducer"`
	MaxRecvKbps              int              `json:"maxRecvKbps"`
	MaxRequestKiB            int              `json:"maxRequestKiB"`
	MaxSendKbps              int              `json:"maxSendKbps"`
	Name                     string           `json:"name"`
	NumConnections           int              `json:"numConnections"`
	Paused                   bool             `json:"paused"`
	RemoteGUIPort            int              `json:"remoteGUIPort"`
	SkipIntroductionRemovals bool             `json:"skipIntroductionRemovals"`
	Untrusted                bool             `json:"untrusted"`
}

// DeviceStatistics defines model for DeviceStatistics.
type DeviceStatistics struct {
	LastConnectionDurationS float64   `json:"lastConnectionDurationS"`
	LastSeen                time.Time `json:"lastSeen"`
}

// Error defines model for Error.
type Error struct {
	Error string `json:"error"`
}

// FolderConfiguration defines model for FolderConfiguration.
type FolderConfiguration struct {
	AutoNormalize           bool                        `json:"autoNormalize"`
	BlockPullOrder          string                      `json:"blockPullOrder"`
	CaseSensitiveFs         bool                        `json:"caseSensitiveFs"`
	Copiers                 int                         `json:"copiers"`
	CopyOwnershipFromParent bool                        `json:"copyOwnershipFromParent"`
	CopyRangeMethod         string                      `json:"copyRangeMethod"`
	Devices                 []FolderDeviceConfiguration `json:"devices"`
	DisableFsync            bool                        `json:"disableFsync"`
	DisableSparseFiles      bool                        `json:"disableSparseFiles"`
	DisableTempIndexes      bool                        `json:"disableTempIndexes"`
	FilesystemType          string                      `json:"filesystemType"`
	FollowJunctions         bool                        `json:"followJunctions"`
	FsWatcherDelayS         float64                     `json:"fsWatcherDelayS"`
	FsWatcherEnabled        bool                        `json:"fsWatcherEnabled"`
	Hashers                 int                         `json:"hashers"`
	Id                      string                      `json:"id"`
	IgnoreDelete            bool                        `json:"ignoreDelete"`
	IgnorePerms             bool                        `json:"ignorePerms"`
	Label                   string                      `json:"label"`
	MarkerName              string                      `json:"markerName"`
	MaxConcurrentWrites     int                         `json:"maxConcurrentWrites"`
	MaxConflicts            int                         `json:"maxConflicts"`
	MinDiskFree             Size                        `json:"minDiskFree"`
	ModTimeWindowS          int                         `json:"modTimeWindowS"`
	Order                   string                      `json:"order"`
	Path                    string                      `json:"path"`
	Paused                  bool                        `json:"paused"`
	PullerMaxPendingKib     int                         `json:"pullerMaxPendingKib"`
	PullerPauseS            int                         `json:"pullerPauseS"`
	RescanIntervalS         int                         `json:"rescanIntervalS"`
	ScanProgressIntervalS   int                         `json:"scanProgressIntervalS"`
	SendOwnership           bool                        `json:"sendOwnership"`
	SendXattrs              bool                        `json:"sendXattrs"`
	SyncOwnership           bool                        `json:"syncOwnership"`
	SyncXattrs              bool                        `json:"syncXattrs"`
	Type                    string                      `json:"type"`
	Versioning              VersioningConfiguration     `json:"versioning"`
	WeakHashThresholdPct    int                         `json:"weakHashThresholdPct"`
	XattrFilter             XattrFilter                 `json:"xattrFilter"`
}

// FolderDeviceConfiguration defines model for FolderDeviceConfiguration.
type FolderDeviceConfiguration struct {
	DeviceId           string `json:"deviceId"`
	EncryptionPassword string `json:"encryptionPassword"`
	IntroducedBy       string `json:"introducedBy"`
}

// HealthStatus defines model for HealthStatus.
type HealthStatus struct {
	Status string `json:"status"`
}

// ObservedFolder defines model for ObservedFolder.
type ObservedFolder struct {
	Id    string    `json:"id"`
	Label string    `json:"label"`
	Time  time.Time `json:"time"`
}

// Size defines model for Size.
type Size struct {
	Unit  string  `json:"unit"`
	Value float32 `json:"value"`
}

// VersioningConfiguration defines model for VersioningConfiguration.
type VersioningConfiguration struct {
	CleanupIntervalS int               `json:"cleanupIntervalS"`
	FsPath           string            `json:"fsPath"`
	FsType           string            `json:"fsType"`
	Params           map[string]string `json:"params"`
	Type             string            `json:"type"`
}

// XattrFilter defines model for XattrFilter.
type XattrFilter struct {
	Entries            []XattrFilterEntry `json:"entries"`
	MaxSingleEntrySize int                `json:"maxSingleEntrySize"`
	MaxTotalSize       int                `json:"maxTotalSize"`
}

// XattrFilterEntry defines model for XattrFilterEntry.
type XattrFilterEntry struct {
	Match  string `json:"match"`
	Permit bool   `json:"permit"`
}
